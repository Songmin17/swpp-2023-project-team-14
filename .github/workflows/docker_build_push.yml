name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - dev
      - feat/tmux_fix
      

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: ./backend
        file: ./backend/Dockerfile
        tags: ${{ secrets.DOCKER_USERNAME }}/haengsha-backend:latest
        push: true
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
    
    - name: Move Docker cache
      run: |
        rm -rf /tmp/.buildx-cache
        mv /tmp/.buildx-cache-new /tmp/.buildx-cache

    - name: Deploy to EC2
      run: |
        echo "$PEM_KEY" > key.pem 
        chmod 600 key.pem
        ssh -i ./"key.pem" -o StrictHostKeyChecking=no ec2-user@${{ secrets.CLOUD_URL }} <<EOF
          docker stop haeng
          docker rm haeng
          docker rmi "${{ secrets.DOCKER_USERNAME }}/haengsha-backend:latest"
          tmux kill-server || true 
          docker pull "${{ secrets.DOCKER_USERNAME }}/haengsha-backend:latest"
          docker run -d --name $CONTAINER_NAME -p 8080:8000 --env-file haengsha-env/.env $DOCKER_USERNAME/haengsha-backend:latest
          tmux new-session -d -s ml_session "docker exec $CONTAINER_NAME /bin/bash -c 'bash recommendation_pipeline.sh'"
        EOF
